import React from "react";

import {type ParsedSolution} from "../../runSolver";

import {DisplaySpecialMessage} from "./DisplaySpecialMessage";
import {DisplayTable} from "./DisplayTable";
import {DisplayDoubleGrouped} from "./DisplayDoubleGrouped";
DisplayTable;
DisplayDoubleGrouped;

import "./index.css";

interface Props {
    solutionData: ParsedSolution | "not-initialized";
}

export function ResultDisplay(props: Props) {
    if (typeof props.solutionData === "string") {
        // If it's a string, an edge case has occurred (such as "no solution found").
        return <DisplaySpecialMessage
            specialCode={props.solutionData}
        />;
    }

    return <>
        <DisplayDoubleGrouped
            fieldLabels={["Round", "Group", "Players"]}
            solutionData={props.solutionData.assign}
        />
<% for (const [outputID, partialSpec] of Object.entries(output)) { -%>
        <DisplayTable
            fieldLabels={[<%-
                partialSpec.fields.map(y => safeString(y.label)).join(", ")
            %>]}
            solutionData={props.solutionData.<%- outputID %>}
        />
<% } -%>
    </>;
}

