name: graph-colouring

input-base:
  colour:
    title: Colours
    params: 1
    initialValues:
      - red
      - green
      - blue
  vertex:
    title: Vertices
    params: 1
    initialValues:
      - v1
      - v2
      - v3
      - v4

input-constrained:
  edge:
    title: Edges
    params: 2
    initialValues:
      - v1,v2
      - v2,v3
      - v3,v4
      - v4,v1
      - v1,v3

constraints: |
  domain(edge(V1, V2)) :- base(vertex, V1), base(vertex, V2), V1 != V2.
#   % domainok(X) :- instance(X), domain(X).
#   % #show.
#   % #show X : instance(X), not domainok(X).

output:
  color:
    title: Colourings
    #params: 2
    fields:
      vertex: Vertex
      colour: Colour

encoding: |
  { solution(color(V,C)) } :- base(vertex, V), base(colour, C).
  coloured(V) :- solution(color(V,C)).
  :- base(vertex, V), not coloured(V).
  :- solution(color(V,C1)), solution(color(V,C2)), C1 != C2.
  :- instance(edge(V1, V2)), solution(color(V1, C)), solution(color(V2, C)).

